[{"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\index.js":"1","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\reportWebVitals.js":"2","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\App.js":"3","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\constants\\routes\\routes.js":"4","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\constants\\services\\services.js":"5","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\user\\user.js":"6","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\helloComponent\\helloComponent.js":"7","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\createUser\\createUser.js":"8","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\mainView\\mainView.js":"9","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\updateUser\\updateUser.js":"10","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\components\\button\\button.js":"11","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\components\\sidebar\\sidebar.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1065,"mtime":1611305648632,"results":"16","hashOfConfig":"14"},{"size":452,"mtime":1611305728959,"results":"17","hashOfConfig":"14"},{"size":606,"mtime":1610571613233,"results":"18","hashOfConfig":"14"},{"size":1802,"mtime":1611956910090,"results":"19","hashOfConfig":"14"},{"size":845,"mtime":1611866353558,"results":"20","hashOfConfig":"14"},{"size":3281,"mtime":1611257146056,"results":"21","hashOfConfig":"14"},{"size":3412,"mtime":1611604633277,"results":"22","hashOfConfig":"14"},{"size":3811,"mtime":1611865675067,"results":"23","hashOfConfig":"14"},{"size":239,"mtime":1611604633215,"results":"24","hashOfConfig":"14"},{"size":278,"mtime":1611604633230,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1lmg2br",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\index.js",[],["55","56"],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\reportWebVitals.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\App.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\constants\\routes\\routes.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\constants\\services\\services.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\user\\user.js",["57"],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\helloComponent\\helloComponent.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\createUser\\createUser.js",["58"],"import { useFormik,Field } from 'formik';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { getMainViewRoute } from '../../constants/routes/routes';\r\nimport { createUser } from '../../constants/services/services';\r\n\r\nconst CreateUser = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            city: \"\",\r\n            status: false\r\n          }\r\n    })\r\n\r\n    const createUserHandler =async (e) => {\r\n        e.preventDefault();\r\n        console.log(formik.values);\r\n        try{\r\n            await createUser(formik.values);\r\n            history.push(getMainViewRoute());\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n        //createUser(formik.values);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form action=\"#\">\r\n                <div >\r\n                <label  htmlFor=\"firstName\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    name=\"firstName\"\r\n                    id=\"firstName\"\r\n                    {...formik.getFieldProps(\"firstName\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"lastName\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    id=\"lastName\"\r\n                    {...formik.getFieldProps(\"lastName\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"address\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Address\"\r\n                    name=\"address\"\r\n                    id=\"address\"\r\n                    {...formik.getFieldProps(\"address\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"city\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"city\"\r\n                    name=\"city\"\r\n                    id=\"city\"\r\n                    {...formik.getFieldProps(\"city\")}\r\n                />\r\n                </div>\r\n\r\n                {/* <div>\r\n                <label htmlFor=\"status\">Status</label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    placeholder=\"Yes\"\r\n                    name=\"status\"\r\n                    id=\"status\"\r\n                    value={true}\r\n                    {...formik.getFieldProps(\"status\")}\r\n                />\r\n                <input\r\n                    type=\"checkbox\"\r\n                    placeholder=\"No\"\r\n                    name=\"status\"\r\n                    id=\"status\"\r\n                    value={false}\r\n                    {...formik.getFieldProps(\"status\")}\r\n                />\r\n                </div> */}\r\n                <label> Active\r\n                    <input type=\"checkbox\" name=\"status\" {...formik.getFieldProps(\"status\")}/>\r\n                </label>\r\n                <button onClick={createUserHandler}>Create</button>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateUser;","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\mainView\\mainView.js",["59"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Sidebar from '../../components/sidebar/sidebar';\r\nimport { generateGetOneUserRoute, genereteUpdateUserRoute, getCreateUserRoute, getOneUserRoute } from '../../constants/routes/routes';\r\nimport { deleteUser, getAllUsers, updateStatus } from '../../constants/services/services';\r\n\r\nimport \"./style.scss\";\r\n\r\nconst MainView = () => {\r\n\r\n    const[users, setUser] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, []);\r\n\r\n    const getData =async () => {\r\n        try {\r\n        const {data} = await getAllUsers();\r\n        setUser(data);\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const statusHandler = async (id, status) => {\r\n        try {\r\n        await updateStatus(id, {status: !status})\r\n        await getData()\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const createHandler = () => {\r\n        history.push(getCreateUserRoute());\r\n    }\r\n\r\n    const deleteHandler =async (id) => {\r\n        try{\r\n            await deleteUser(id);\r\n            await getData();\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const oneUserHandler = (id) => {\r\n        history.push(generateGetOneUserRoute(id));\r\n    }\r\n\r\n    const updateUserHandler = (id) => {\r\n        history.push(genereteUpdateUserRoute(id));\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"main-view\">\r\n            <Sidebar />\r\n            <table className=\"section-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Address</th>\r\n                        <th>City</th>\r\n                        <th>Status</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    \r\n                        {users.map((user) => (\r\n                            <tr key={user.firstName + user.address} >\r\n                                <td onClick={()=>oneUserHandler(user.id)}>{user.firstName}</td>\r\n                                <td>{user.lastName}</td>\r\n                                <td>{user.address} </td>\r\n                                <td>{user.city}</td>\r\n                                {user.status === true ? (<td>Active</td>) : (<td>Not Activ</td>)}\r\n                                <div>\r\n                                    <td>\r\n                                        <button className=\"btn\" onClick={() =>statusHandler(user.id, user.status)}>Change Status</button>\r\n                                        <button className=\"btn\" onClick={() =>deleteHandler(user.id)}>Delete User</button>\r\n                                        <button className=\"btn\" onClick={() =>updateUserHandler(user.id)}>Update User</button>\r\n                                    </td>\r\n                                </div>\r\n                                \r\n                            </tr>\r\n                            \r\n                        ))}\r\n                </tbody>\r\n            </table>\r\n            <div>\r\n                <button className=\"btn btn-create\" onClick={createHandler}>Create new User</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainView;","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\updateUser\\updateUser.js",["60","61"],"import { useFormik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router';\r\nimport { getMainViewRoute } from '../../constants/routes/routes';\r\nimport { getOneUser, updateStatus } from '../../constants/services/services';\r\n\r\nconst UpdateUser = () => {\r\n\r\n    const [user, setUser] = useState({});\r\n    const [datas ,setData] = useState(false);\r\n    const match = useRouteMatch();\r\n    const history = useHistory();\r\n    \r\n\r\n    useEffect(() => {\r\n        getUserData();\r\n    },[]);\r\n\r\n    const getUserData = async() => {\r\n        const {id} = match.params; \r\n        try{\r\n            const {data} = await getOneUser(id);\r\n            console.log(data)\r\n            setData(true);\r\n            setUser(data);\r\n            console.log(user)\r\n        }catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n//      const getUserData = async () => {\r\n//         return new Promise(async (resolve, reject) => {\r\n//         const {id} = match.params; \r\n//       try {\r\n//         const {data} = await getOneUser(id);\r\n//         setUser(data);\r\n//         console.log(data)\r\n//         console.log(user)\r\n//         resolve(data);\r\n//         //setNewCoutry(false);\r\n//       } catch (err) {\r\n//         console.error(err);\r\n//         reject(err);\r\n//       }\r\n//     });\r\n//   };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        address: \"\",\r\n        city: \"\"\r\n      }\r\n})\r\n\r\n    // const getUserData = async() => {\r\n    //     const {id} = match.params; \r\n    //     try{\r\n    //         const {data} = await getOneUser(id);\r\n    //         setUser(data);\r\n    //         console.log(data)\r\n    //     }catch (err) {\r\n    //         console.log(err);\r\n    //     }\r\n    // }\r\n\r\n\r\n    const updateUserHandler = async(e) => {\r\n        e.preventDefault();\r\n        const {id} = match.params;\r\n        try{\r\n            await updateStatus(id,formik.values);\r\n            history.push(getMainViewRoute())\r\n        }catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            \r\n            <form action=\"#\">\r\n                <div >\r\n\r\n                <label  htmlFor=\"firstName\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    name=\"firstName\"\r\n                    id=\"firstName\"\r\n                    value=\"firstName\"\r\n                    {...formik.getFieldProps(\"firstName\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                    \r\n                <label htmlFor=\"lastName\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    id=\"lastName\"\r\n                    {...formik.getFieldProps(\"lastName\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"address\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Address\"\r\n                    name=\"address\"\r\n                    id=\"address\"\r\n                    {...formik.getFieldProps(\"address\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"city\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"city\"\r\n                    name=\"city\"\r\n                    id=\"city\"\r\n                    {...formik.getFieldProps(\"city\")}\r\n                />\r\n                </div>\r\n                <button onClick={updateUserHandler}>Update</button>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\nexport default UpdateUser;","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\components\\button\\button.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\components\\sidebar\\sidebar.js",["62","63","64","65"],"import React from 'react';\r\n\r\nconst Sidebar = () => {\r\n\r\n    return(\r\n        <div class=\"sidenav\">\r\n        <a href=\"#\">User</a>\r\n        <a href=\"#\">Home</a>\r\n        <a href=\"#\">Clients</a>\r\n        <a href=\"#\">About App</a>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":15,"column":7,"nodeType":"72","endLine":15,"endColumn":9,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":20,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"78","line":4,"column":80,"nodeType":"76","messageId":"77","endLine":4,"endColumn":95},{"ruleId":"74","severity":1,"message":"79","line":10,"column":12,"nodeType":"76","messageId":"77","endLine":10,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":17,"column":7,"nodeType":"72","endLine":17,"endColumn":9,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":7,"column":9,"nodeType":"83","endLine":7,"endColumn":21},{"ruleId":"81","severity":1,"message":"82","line":8,"column":9,"nodeType":"83","endLine":8,"endColumn":21},{"ruleId":"81","severity":1,"message":"82","line":9,"column":9,"nodeType":"83","endLine":9,"endColumn":21},{"ruleId":"81","severity":1,"message":"82","line":10,"column":9,"nodeType":"83","endLine":10,"endColumn":21},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.","ArrayExpression",["86"],"no-unused-vars","'Field' is defined but never used.","Identifier","unusedVar","'getOneUserRoute' is defined but never used.","'datas' is assigned a value but never used.",["87"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"88","fix":"90"},"Update the dependencies array to be: [getUserData]",{"range":"91","text":"92"},{"range":"93","text":"92"},[495,497],"[getUserData]",[549,551]]