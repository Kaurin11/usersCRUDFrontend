[{"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\index.js":"1","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\reportWebVitals.js":"2","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\App.js":"3","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\constants\\routes\\routes.js":"4","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\constants\\services\\services.js":"5","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\user\\user.js":"6","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\helloComponent\\helloComponent.js":"7","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\createUser\\createUser.js":"8","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\mainView\\mainView.js":"9","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\updateUser\\updateUser.js":"10","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\components\\button\\button.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1065,"mtime":1611305648632,"results":"15","hashOfConfig":"13"},{"size":452,"mtime":1611305728959,"results":"16","hashOfConfig":"13"},{"size":606,"mtime":1610571613233,"results":"17","hashOfConfig":"13"},{"size":1354,"mtime":1611257215845,"results":"18","hashOfConfig":"13"},{"size":845,"mtime":1611335467808,"results":"19","hashOfConfig":"13"},{"size":3281,"mtime":1611257146056,"results":"20","hashOfConfig":"13"},{"size":3166,"mtime":1611332969127,"results":"21","hashOfConfig":"13"},{"size":2866,"mtime":1611257197435,"results":"22","hashOfConfig":"13"},{"size":239,"mtime":1611334691419,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1lmg2br",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\index.js",[],["51","52"],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\reportWebVitals.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\App.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\constants\\routes\\routes.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\constants\\services\\services.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\user\\user.js",["53"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router';\r\nimport { getMainViewRoute } from '../../constants/routes/routes';\r\nimport { getOneUser } from '../../constants/services/services';\r\n\r\nconst User = () => {\r\n\r\n    const [user, setUser] = useState(null);\r\n    const match = useRouteMatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getUserData();\r\n    },[])\r\n\r\n    const getUserData = async() => {\r\n        const {id} = match.params; \r\n        try{\r\n            const {data} = await getOneUser(id);\r\n            console.log(data)\r\n            setUser(data);\r\n            console.log(user)\r\n        }catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    \r\n    const backToBikesHandler = () => {\r\n        history.push(getMainViewRoute());\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {user && (\r\n            <div>\r\n            <div>First Name :{user.firstName}</div>\r\n            <div>Last Name : {user.lastName}</div>\r\n            <div>Address :{user.address}</div>\r\n            <div>City : {user.city}</div>\r\n            <div>Status : {user.status === true ? ('Active') : ('Not Activ')}</div>\r\n            </div>\r\n        )}\r\n\r\n            <button onClick={() => backToBikesHandler()}>Back</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\helloComponent\\helloComponent.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\createUser\\createUser.js",["54"],"import { useFormik,Field } from 'formik';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { getMainViewRoute } from '../../constants/routes/routes';\r\nimport { createUser } from '../../constants/services/services';\r\n\r\nconst CreateUser = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            city: \"\",\r\n            status: false\r\n          }\r\n    })\r\n\r\n    const createUserHandler =async (e) => {\r\n        e.preventDefault();\r\n        console.log(formik.values);\r\n        try{\r\n            await createUser(formik.values);\r\n            history.push(getMainViewRoute());\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n        //createUser(formik.values);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form action=\"#\">\r\n                <div >\r\n                <label  htmlFor=\"firstName\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    name=\"firstName\"\r\n                    id=\"firstName\"\r\n                    {...formik.getFieldProps(\"firstName\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"lastName\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    id=\"lastName\"\r\n                    {...formik.getFieldProps(\"lastName\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"address\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Address\"\r\n                    name=\"address\"\r\n                    id=\"address\"\r\n                    {...formik.getFieldProps(\"address\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"city\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"city\"\r\n                    name=\"city\"\r\n                    id=\"city\"\r\n                    {...formik.getFieldProps(\"city\")}\r\n                />\r\n                </div>\r\n\r\n                {/* <div>\r\n                <label htmlFor=\"status\">Status</label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    placeholder=\"Yes\"\r\n                    name=\"status\"\r\n                    id=\"status\"\r\n                    value={true}\r\n                    {...formik.getFieldProps(\"status\")}\r\n                />\r\n                <input\r\n                    type=\"checkbox\"\r\n                    placeholder=\"No\"\r\n                    name=\"status\"\r\n                    id=\"status\"\r\n                    value={false}\r\n                    {...formik.getFieldProps(\"status\")}\r\n                />\r\n                </div> */}\r\n                <label> Active\r\n                    <input type=\"checkbox\" name=\"status\" {...formik.getFieldProps(\"status\")}/>\r\n                </label>\r\n                <button onClick={createUserHandler}>Create</button>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateUser;","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\mainView\\mainView.js",["55"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { generateGetOneUserRoute, genereteUpdateUserRoute, getCreateUserRoute, getOneUserRoute } from '../../constants/routes/routes';\r\nimport { deleteUser, getAllUsers, updateStatus } from '../../constants/services/services';\r\n\r\nimport \"./style.scss\";\r\n\r\nconst MainView = () => {\r\n\r\n    const[users, setUser] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, []);\r\n\r\n    const getData =async () => {\r\n        try {\r\n        const {data} = await getAllUsers();\r\n        setUser(data);\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const statusHandler = async (id, status) => {\r\n        try {\r\n        await updateStatus(id, {status: !status})\r\n        await getData()\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const createHandler = () => {\r\n        history.push(getCreateUserRoute());\r\n    }\r\n\r\n    const deleteHandler =async (id) => {\r\n        try{\r\n            await deleteUser(id);\r\n            await getData();\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const oneUserHandler = (id) => {\r\n        history.push(generateGetOneUserRoute(id));\r\n    }\r\n\r\n    const updateUserHandler = (id) => {\r\n        history.push(genereteUpdateUserRoute(id));\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Address</th>\r\n                        <th>City</th>\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    \r\n                        {users.map((user) => (\r\n                            <tr key={user.firstName + user.address} >\r\n                                <td onClick={()=>oneUserHandler(user.id)}>{user.firstName}</td>\r\n                                <td>{user.lastName}</td>\r\n                                <td>{user.address} </td>\r\n                                <td>{user.city}</td>\r\n                                {user.status === true ? (<td>Active</td>) : (<td>Not Activ</td>)}\r\n                                <div>\r\n                                    <td>\r\n                                        <button onClick={() =>statusHandler(user.id, user.status)}>Change Status</button>\r\n                                        <button onClick={() =>deleteHandler(user.id)}>Delete User</button>\r\n                                        <button onClick={() =>updateUserHandler(user.id)}>Update User</button>\r\n                                    </td>\r\n                                </div>\r\n                                \r\n                            </tr>\r\n                            \r\n                        ))}\r\n                </tbody>\r\n            </table>\r\n            <div>\r\n                <button onClick={createHandler}>Create new User</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainView;","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\updateUser\\updateUser.js",["56","57"],"import { useFormik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router';\r\nimport { getMainViewRoute } from '../../constants/routes/routes';\r\nimport { getOneUser, updateStatus } from '../../constants/services/services';\r\n\r\nconst UpdateUser = () => {\r\n\r\n    const match = useRouteMatch();\r\n    const history = useHistory();\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getUserData();\r\n    },[]);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: \"gidra\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            city: \"\"\r\n          }\r\n    })\r\n\r\n    const getUserData = async() => {\r\n        const {id} = match.params; \r\n        try{\r\n            const {data} = await getOneUser(id);\r\n            setUser(data);\r\n        }catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n    const updateUserHandler = async(e) => {\r\n        e.preventDefault();\r\n        const {id} = match.params;\r\n        try{\r\n            await updateStatus(id,formik.values);\r\n            history.push(getMainViewRoute())\r\n        }catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form action=\"#\">\r\n                <div >\r\n                <label  htmlFor=\"firstName\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    name=\"firstName\"\r\n                    id=\"firstName\"\r\n                    value=\"firstName\"\r\n                    {...formik.getFieldProps(\"firstName\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"lastName\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    id=\"lastName\"\r\n                    {...formik.getFieldProps(\"lastName\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"address\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Address\"\r\n                    name=\"address\"\r\n                    id=\"address\"\r\n                    {...formik.getFieldProps(\"address\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"city\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"city\"\r\n                    name=\"city\"\r\n                    id=\"city\"\r\n                    {...formik.getFieldProps(\"city\")}\r\n                />\r\n                </div>\r\n                <button onClick={updateUserHandler}>Update</button>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\nexport default UpdateUser;","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\components\\button\\button.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":14,"column":7,"nodeType":"64","endLine":14,"endColumn":9,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":20,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"70","line":3,"column":80,"nodeType":"68","messageId":"69","endLine":3,"endColumn":95},{"ruleId":"66","severity":1,"message":"71","line":11,"column":12,"nodeType":"68","messageId":"69","endLine":11,"endColumn":16},{"ruleId":"62","severity":1,"message":"63","line":15,"column":7,"nodeType":"64","endLine":15,"endColumn":9,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.","ArrayExpression",["75"],"no-unused-vars","'Field' is defined but never used.","Identifier","unusedVar","'getOneUserRoute' is defined but never used.","'user' is assigned a value but never used.",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"77","fix":"79"},"Update the dependencies array to be: [getUserData]",{"range":"80","text":"81"},{"range":"82","text":"81"},[441,443],"[getUserData]",[498,500]]