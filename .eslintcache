[{"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\index.js":"1","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\reportWebVitals.js":"2","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\App.js":"3","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\constants\\routes\\routes.js":"4","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\constants\\services\\services.js":"5","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\user\\user.js":"6","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\helloComponent\\helloComponent.js":"7","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\createUser\\createUser.js":"8","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\mainView\\mainView.js":"9","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\updateUser\\updateUser.js":"10","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\components\\button\\button.js":"11","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\components\\sidebar\\sidebar.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1065,"mtime":1611305648632,"results":"16","hashOfConfig":"14"},{"size":452,"mtime":1611305728959,"results":"17","hashOfConfig":"14"},{"size":606,"mtime":1610571613233,"results":"18","hashOfConfig":"14"},{"size":1354,"mtime":1611257215845,"results":"19","hashOfConfig":"14"},{"size":845,"mtime":1611353997224,"results":"20","hashOfConfig":"14"},{"size":3281,"mtime":1611257146056,"results":"21","hashOfConfig":"14"},{"size":3412,"mtime":1611591604872,"results":"22","hashOfConfig":"14"},{"size":2866,"mtime":1611257197435,"results":"23","hashOfConfig":"14"},{"size":239,"mtime":1611334691419,"results":"24","hashOfConfig":"14"},{"size":278,"mtime":1611354713798,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1lmg2br",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\index.js",[],["55","56"],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\reportWebVitals.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\App.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\constants\\routes\\routes.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\constants\\services\\services.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\user\\user.js",["57"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router';\r\nimport { getMainViewRoute } from '../../constants/routes/routes';\r\nimport { getOneUser } from '../../constants/services/services';\r\n\r\nconst User = () => {\r\n\r\n    const [user, setUser] = useState(null);\r\n    const match = useRouteMatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getUserData();\r\n    },[])\r\n\r\n    const getUserData = async() => {\r\n        const {id} = match.params; \r\n        try{\r\n            const {data} = await getOneUser(id);\r\n            console.log(data)\r\n            setUser(data);\r\n            console.log(user)\r\n        }catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    \r\n    const backToBikesHandler = () => {\r\n        history.push(getMainViewRoute());\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {user && (\r\n            <div>\r\n            <div>First Name :{user.firstName}</div>\r\n            <div>Last Name : {user.lastName}</div>\r\n            <div>Address :{user.address}</div>\r\n            <div>City : {user.city}</div>\r\n            <div>Status : {user.status === true ? ('Active') : ('Not Activ')}</div>\r\n            </div>\r\n        )}\r\n\r\n            <button onClick={() => backToBikesHandler()}>Back</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\helloComponent\\helloComponent.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\createUser\\createUser.js",["58"],"import { useFormik,Field } from 'formik';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { getMainViewRoute } from '../../constants/routes/routes';\r\nimport { createUser } from '../../constants/services/services';\r\n\r\nconst CreateUser = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            city: \"\",\r\n            status: false\r\n          }\r\n    })\r\n\r\n    const createUserHandler =async (e) => {\r\n        e.preventDefault();\r\n        console.log(formik.values);\r\n        try{\r\n            await createUser(formik.values);\r\n            history.push(getMainViewRoute());\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n        //createUser(formik.values);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form action=\"#\">\r\n                <div >\r\n                <label  htmlFor=\"firstName\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    name=\"firstName\"\r\n                    id=\"firstName\"\r\n                    {...formik.getFieldProps(\"firstName\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"lastName\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    id=\"lastName\"\r\n                    {...formik.getFieldProps(\"lastName\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"address\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Address\"\r\n                    name=\"address\"\r\n                    id=\"address\"\r\n                    {...formik.getFieldProps(\"address\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"city\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"city\"\r\n                    name=\"city\"\r\n                    id=\"city\"\r\n                    {...formik.getFieldProps(\"city\")}\r\n                />\r\n                </div>\r\n\r\n                {/* <div>\r\n                <label htmlFor=\"status\">Status</label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    placeholder=\"Yes\"\r\n                    name=\"status\"\r\n                    id=\"status\"\r\n                    value={true}\r\n                    {...formik.getFieldProps(\"status\")}\r\n                />\r\n                <input\r\n                    type=\"checkbox\"\r\n                    placeholder=\"No\"\r\n                    name=\"status\"\r\n                    id=\"status\"\r\n                    value={false}\r\n                    {...formik.getFieldProps(\"status\")}\r\n                />\r\n                </div> */}\r\n                <label> Active\r\n                    <input type=\"checkbox\" name=\"status\" {...formik.getFieldProps(\"status\")}/>\r\n                </label>\r\n                <button onClick={createUserHandler}>Create</button>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateUser;","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\mainView\\mainView.js",["59"],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\view\\updateUser\\updateUser.js",["60","61"],"import { useFormik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router';\r\nimport { getMainViewRoute } from '../../constants/routes/routes';\r\nimport { getOneUser, updateStatus } from '../../constants/services/services';\r\n\r\nconst UpdateUser = () => {\r\n\r\n    const match = useRouteMatch();\r\n    const history = useHistory();\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getUserData();\r\n    },[]);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: \"gidra\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            city: \"\"\r\n          }\r\n    })\r\n\r\n    const getUserData = async() => {\r\n        const {id} = match.params; \r\n        try{\r\n            const {data} = await getOneUser(id);\r\n            setUser(data);\r\n        }catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n    const updateUserHandler = async(e) => {\r\n        e.preventDefault();\r\n        const {id} = match.params;\r\n        try{\r\n            await updateStatus(id,formik.values);\r\n            history.push(getMainViewRoute())\r\n        }catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form action=\"#\">\r\n                <div >\r\n                <label  htmlFor=\"firstName\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    name=\"firstName\"\r\n                    id=\"firstName\"\r\n                    value=\"firstName\"\r\n                    {...formik.getFieldProps(\"firstName\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"lastName\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    id=\"lastName\"\r\n                    {...formik.getFieldProps(\"lastName\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"address\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Address\"\r\n                    name=\"address\"\r\n                    id=\"address\"\r\n                    {...formik.getFieldProps(\"address\")}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label htmlFor=\"city\"></label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"city\"\r\n                    name=\"city\"\r\n                    id=\"city\"\r\n                    {...formik.getFieldProps(\"city\")}\r\n                />\r\n                </div>\r\n                <button onClick={updateUserHandler}>Update</button>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\nexport default UpdateUser;","C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\components\\button\\button.js",[],"C:\\Gidra\\Projects\\UserAdminApp\\my-admin-user\\src\\components\\sidebar\\sidebar.js",["62","63","64","65"],"import React from 'react';\r\n\r\nconst Sidebar = () => {\r\n\r\n    return(\r\n        <div class=\"sidenav\">\r\n        <a href=\"#\">User</a>\r\n        <a href=\"#\">Home</a>\r\n        <a href=\"#\">Clients</a>\r\n        <a href=\"#\">About App</a>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":14,"column":7,"nodeType":"72","endLine":14,"endColumn":9,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":20,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"78","line":4,"column":80,"nodeType":"76","messageId":"77","endLine":4,"endColumn":95},{"ruleId":"74","severity":1,"message":"79","line":11,"column":12,"nodeType":"76","messageId":"77","endLine":11,"endColumn":16},{"ruleId":"70","severity":1,"message":"71","line":15,"column":7,"nodeType":"72","endLine":15,"endColumn":9,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":7,"column":9,"nodeType":"83","endLine":7,"endColumn":21},{"ruleId":"81","severity":1,"message":"82","line":8,"column":9,"nodeType":"83","endLine":8,"endColumn":21},{"ruleId":"81","severity":1,"message":"82","line":9,"column":9,"nodeType":"83","endLine":9,"endColumn":21},{"ruleId":"81","severity":1,"message":"82","line":10,"column":9,"nodeType":"83","endLine":10,"endColumn":21},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.","ArrayExpression",["86"],"no-unused-vars","'Field' is defined but never used.","Identifier","unusedVar","'getOneUserRoute' is defined but never used.","'user' is assigned a value but never used.",["87"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"88","fix":"90"},"Update the dependencies array to be: [getUserData]",{"range":"91","text":"92"},{"range":"93","text":"92"},[441,443],"[getUserData]",[498,500]]